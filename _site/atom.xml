<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>䌨訞的博客</title>
 <link href="http://caiyaoblog.me/" rel="self"/>
 <link href="http://caiyaoblog.me"/>
 <updated>2016-08-21T12:52:10+08:00</updated>
 <id>http://caiyaoblog.me</id>
 <author>
   <name>䌨訞</name>
   <email>henan_caiyao@163.com</email>
 </author>

 
 <entry>
   <title>最近工作总结</title>
   <link href="http://caiyaoblog.me/2016/07/02/blog-dilemma"/>
   <updated>2016-07-02T00:00:00+08:00</updated>
   <id>http://caiyaoblog.me/2016/07/02/blog-dilemma</id>
   <content type="html">&lt;h1&gt;最近工作总结&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src = &quot;http://7xvn6m.com1.z0.glb.clouddn.com/default.jpeg&quot; /&gt;
　　本来计划要给自己出一个近期工作学习计划，构思自己长期的奋斗目标，但是又由于公司工作无法按时完成，导致一时腾不出手来想。所以目前最紧急的事情是确定自己如何能够慢慢的提高工作效率，适应工作。就拿最近做的这个任务来分析：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;任务目的： 完成勇哥写的服务成本统计优化&lt;br/&gt;
- 分析需求&amp;amp;代码阅读&lt;br/&gt;
　　完成目标： 需要改动哪些地方？确定需要额外申请哪些资源？&lt;br/&gt;
　　规划时间： 1天。实际耗时：大约3天，穿插在5天之间。第一次代码没有完全理解&lt;br/&gt;
- 代码修改&amp;amp;测试&lt;br/&gt;
    - 步骤1： sql 修改及测试&lt;br/&gt;
    　　　　规划时间： 1天；实际耗时： 2天+。 sql测试方法选取延误，&lt;br/&gt;
    - 步骤2： java修改及测试&lt;br/&gt;
    　　　　规划时间： 0.5天&lt;br/&gt;
    - 步骤3： 线上配置及测试&lt;br/&gt;
    　　　　规划时间： 0.5天&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;归结起来主要问题是每天没有明确的计划导致工作无目的，浪费时间。&lt;/p&gt;

&lt;h3&gt;　　７.３　～　８.３月计划&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;每天日报花点时间思考一下今天都干了什么，完成了什么，什么没有完成；明天要完成什么。&lt;/li&gt;
&lt;li&gt;准备干一件事情以前，先花点时间想一下为什么要这么做，这么做的目的是什么，这样做的方案是否可行，认真想，只有大方向对了才能不走弯路。&lt;/li&gt;
&lt;li&gt;一定要淡定，努力保持心情平静，不要因为外界或者编写代码过程中的影响而导致焦躁和狂喜。&lt;/li&gt;
&lt;li&gt;在朝着一个目标前进的时候，如果思维有跑小差的倾向，一定要立马提醒自己目标是什么，保证精力的集中。&lt;/li&gt;
&lt;li&gt;给自己要做的事排期，排优先级。不要眉毛胡子一把抓。专注一件事才能做好~~~&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;下面一个月需要完成的任务&lt;/strong&gt;：&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;接下来的一个月需要保持上面5点的生活工作方式。 优先级  高 规划时间： 一个月&lt;/li&gt;
&lt;li&gt;Java多线程编程基础知识，大致浏览技术，对其中一个重要技术点完成博客编写 优先级 中 规划时间：一个星期 高&lt;/li&gt;
&lt;li&gt;Java设计模式基础知识 结合第四点：找出Spring框架源码中常见的5种设计模式，完成Spring设计模式介绍博客。优先级 高 规划时间：&lt;/li&gt;
&lt;li&gt;Spring源码阅读。优先级 低 规划时间：&lt;/li&gt;
&lt;li&gt;SQL&amp;amp;MySQL执行原理基础知识，大致浏览技术，对其中一个重要技术点完成博客 优先级 高 规划时间：一个星期&lt;/li&gt;
&lt;li&gt;Python基础知识完成，完成时要完成一篇Python和Java的比较博客。优先级 高 规划耗时： 一个星期&lt;/li&gt;
&lt;li&gt;对比较重要的技术点需要完成饱满生动博客编写 优先级 高 规划时间：&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;接下来一个月计划：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;第一个星期完成Python剩下基础知识通读。不需细品，大致浏览。然后完成Python、Java比较博客。基础知识通读大致耗时&lt;strong&gt;5天&lt;/strong&gt;，上班和下班路上大致有5个小时时间使用。 在周末完成博客编写，大致耗时&lt;strong&gt;一天&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;第二个星期完成Java多线程编程基础知识通读。主要途径： 书籍《Java多线程编程实战指南》《java并发编程实践》。周末完成博客，主要记录Java并发编程API和少量自己还不知道的理论知识。&lt;/li&gt;
&lt;li&gt;第三个星期完成标准SQL通读以及MySQL数据sql执行底层原理。周末完成其中一个重要知识点的记录，要有自己的理解。&lt;/li&gt;
&lt;li&gt;最后一个星期对Spring中常用的5种设计模式抽取出来，并阅读源码。周末以博客记录模式解读以及Spring中的实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;坚持就会胜利，努力就能成功！&lt;/strong&gt;&lt;br/&gt;
　　　　　　　　　　　　　　　　　　　　　　7/3/2016 9:39:04 PM&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>博客搭建</title>
   <link href="http://caiyaoblog.me/2016/06/23/blog-build&plan"/>
   <updated>2016-06-23T00:00:00+08:00</updated>
   <id>http://caiyaoblog.me/2016/06/23/blog-build&plan</id>
   <content type="html">&lt;h1&gt;博客搭建过程记录&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;　　至此，博客终于可以正常访问了！通过github pages功能搭建博客其实难度不大，就几个步骤，各种账号申请，然后简单的git使用就完事了。主要的工作量还是在静态页面的设计上，我这里用的是基于jekyll引擎的模板，这里感谢&lt;a href=&quot;https://github.com/enml/blog/tree/jekyll-blog&quot;&gt;enml&lt;/a&gt;的博客模板，很简洁，一直爱不释手。&lt;br/&gt;
　　博客的搭建和维护其实就是代码仓库的创建和代码的提交与修改，所以在搭建博客之前git的使用方法一定要熟悉一下，推荐几篇 &lt;a href=&quot;http://www.bootcss.com/p/git-guide/&quot;&gt;git - 简易指南&lt;/a&gt;、&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/&quot;&gt;Git教程&lt;/a&gt;。git使用方法熟悉了，博客搭建就基本没有问题了。github pages分为两种 &lt;em&gt;User or organization site&lt;/em&gt;、&lt;em&gt;Project site&lt;/em&gt;。 我理解两者的差别有： 1. 意义不同（废话）。 2. 创建的仓库名格式不同。 user/organization 创建的仓库名格式必须为 &lt;strong&gt;username.github.io&lt;/strong&gt;，这也就是你博客访问的域名。Project仓库名格式没有要求，随意。 3. 分支不同。 User/Organization博客代码（博文）提交到master分支；Project主页提交到gh-pages分支，可以自己手动创建，也可以通过github页面上的操作来点击完成。具体github pages使用访问请移步&lt;a href=&quot;https://pages.github.com/&quot;&gt;github pages&lt;/a&gt;。我创建的是User/Organization类型，按照&lt;a href=&quot;https://pages.github.com/&quot;&gt;github pages&lt;/a&gt;上面的操作后成功访问域名 &lt;em&gt;https://henanCaiyao.github.io/&lt;/em&gt;（论一个好的ID是多么重要！！！！ henanCaiyao什么鬼，太老土了，推荐&lt;a href=&quot;https://www.zhihu.com/question/19613148?q=%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%A5%BD%E8%AE%B0%E5%8F%88%E5%94%AF%E4%B8%80%E7%9A%84ID&quot;&gt;如何设计好记又唯一的ID&lt;/a&gt;）。当你看到熟悉的Hello World时表明你已经完成了博客的搭建。但是只显示个Hello World不算个事啊。下面来丰富一下网页。&lt;br/&gt;
　　有两种方式提交你的博客格式：　1. 写好Html文件提交（有很多静态博客页生成程序，比如Hexo） 2. 提交符合Jekyll格式的文件，由github自动生成静态网页。我用的是Jekyll格式。Jekyll格式模板有很多，可以在这里找--&gt; &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll Themes&lt;/a&gt;，也可以自己手动写。 我是从&lt;a href=&quot;https://github.com/enml/blog/tree/jekyll-blog&quot;&gt;enml&lt;/a&gt;哪里fork来的，其实也不算fork，因为他的是Project Page，而我的是User page 。所以我是把他的代码复制到我的henanCaiyao.github.io仓库里的。当然复制以后是需要修改一些个人的东西的，比如博主名字、博客内容等。将个人的东西修改完了以后提交就可以看到自己的一些信息了。&lt;br/&gt;
　　博客还有两个比较重要的是评论和访问分析。有的模板带的有这两块代码，但是需要自己给一些配置更新一下，评论现在用的比较多的就是&lt;a href=&quot;https://disqus.com/&quot;&gt;disqus&lt;/a&gt;，我也用的这个，disqus网站上有教怎么一步一步将disqus添加到网页上。添加了以后的效果就像这样
&lt;img src=&quot;http://7xvn6m.com1.z0.glb.clouddn.com/disqus.png&quot; alt=&quot;disqus&quot; /&gt;
如果想在上面评论需要注册disqus账号，当然上面的评论都是存储在disqus上，你博客上的上的评论可以登录你自己disqus账号后查看。而且点击你自己的账号可以显示你所有的评论记录
&lt;img src=&quot;http://7xvn6m.com1.z0.glb.clouddn.com/disqus-2.png&quot; alt=&quot;disqus&quot; /&gt;
。评论弄完了现在来弄访问分析插件，你网站访问量多少应该比较关心的事情了，大一点的网站应该有自己作统计的，但是作为连空间都用github代码托管空间冒充的我当然还是用现成的51啦&lt;img src=&quot;http://7xvn6m.com1.z0.glb.clouddn.com/analysics.png&quot; alt=&quot;51啦&quot; /&gt;。还有cnzz，百度统计、Google Analytics。。。。 跟评论插件一样的步骤，到51啦官网注册账号然后将获取的嵌入代码放在自己想放的位置上就ok了，当想看访问数据是用自己的账号登录就可以看了
&lt;img src=&quot;http://7xvn6m.com1.z0.glb.clouddn.com/analysis-2.png&quot; alt=&quot;analysis&quot; /&gt;.&lt;br/&gt;
　　现在基本上都处理完了，就剩最重要的一步： 写博客了~~ 。 这是一场持久战，不能一时兴奋搭了个站，然后搭好以后再也没有访问过。。。。 写博客之前需要了解一些基本知识，第一个就是markdown，&lt;a href=&quot;http://sspai.com/25137&quot;&gt;认识与入门 Markdown&lt;/a&gt;。还有 Liquid的简单语法，我用的模板引擎是jekyll，Liquid是它支持的标记语言，就类似jsp一样，可以在页面中嵌入一些变量，markdown是用来写博客的标记语言，比html还要简单很多，它的主要目标就是让写者注重内容而不是样式，当然花里胡哨的也不适合博客的，window平台大家都在推荐的是MarkdownPad。挺好用的，我的这篇博文就是在这个上面写的，当然我也是刚入门，还很难看。 写完保存，git add --all git commit -m &quot;&quot; git push origin master。 搞定~~~~&lt;/p&gt;
</content>
 </entry>
 
 
</feed>